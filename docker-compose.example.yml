version: "2.2"

volumes:
  postgres_data:
  redis_data:
  npm_cache:
  composer_cache:

services:
  postgres:
    image: postgres:11-alpine
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    ports:
      - "127.0.0.1:5432:5432"

  redis:
    image: redis:5.0-alpine
    volumes:
      - "redis_data:/data"
    ports:
      - "127.0.0.1:6379:6379"

  mailhog:
    image: mailhog/mailhog
    ports:
      - "127.0.0.1:8025:8025"

  composer:
    image: iras/php7-composer:1
    user: "$UID"
    working_dir: "/community"
    entrypoint: /usr/bin/composer
    command: help
    volumes:
      - "./:/community"
      - "composer_cache:/composer/cache"

  npm:
    image: node:8-alpine
    user: "$UID"
    working_dir: "/community"
    entrypoint: /usr/local/bin/npm
    command: help
    volumes:
      - "./:/community"
      - "npm_cache:/home/node/.npm"
      - "./docker/node/path.sh:/etc/profile.d/path.sh"

  php:
    build:
      context: "."
      dockerfile: "docker/php/Dockerfile"
    depends_on:
      - postgres
      - mailhog
      - redis
    working_dir: "/community"
    volumes:
      - ".:/community"
      - "./storage/logs:/var/log/php"
      - "./docker/php/debug.sh:/usr/bin/debug"
      # you may want to enable xdebug copy and adept the example file
      # - "./docker/php/xdebug.ini:/etc/php7/conf.d/xdebug.ini"
      # you may want to share your psysh configs
      # - "$HOME:/home/www-user"
    environment:
      - "UID=$UID"
      - "GID=$GID"
      - "APP_ENV=development"

  nginx:
    build:
      context: "."
      dockerfile: "docker/nginx/Dockerfile"
    depends_on:
      - "php"
    volumes:
      - "./public:/community/public"
      - "./storage/logs:/var/log/httpd"
      - "./docker/nginx/server.conf:/etc/nginx/conf.d/server/community.conf"
    ports:
      - "8080:8080"
    environment:
      - "UID=$UID"
      - "GID=$GID"
