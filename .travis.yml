language: php
cache:
  directories:
    - $HOME/.composer/cache
before_install: echo "extension = redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini

jobs:
  include:
    - stage: "Test"
      name: "PHPUnit Tests (PHP 7.2)"
      php: 7.2
      before_script:
        - composer install --no-interaction
      script:
        - vendor/bin/phpunit -c phpunit.xml --color=always --coverage-text
      after_success: []

    - stage: "Test"
      name: "PHPUnit Tests (PHP 7.3)"
      php: 7.3
      before_script:
        - composer install --no-interaction
        - composer require php-coveralls/php-coveralls
        - mkdir -p build/logs
      script:
        - vendor/bin/phpunit -c phpunit.xml --color=always --coverage-clover=build/logs/clover.xml --coverage-text
      after_success:
        - vendor/bin/php-coveralls -v

    - stage: "Test"
      name: "PHPUnit Tests (PHP 7.4)"
      php: 7.4
      before_script:
        - composer install --no-interaction
      script:
        - vendor/bin/phpunit -c phpunit.xml --color=always --coverage-text
      after_success: []

    - stage: "Test"
      name: "Code Style"
      language: php
      php: 7.3
      cache:
        directories:
          - $HOME/.composer/cache
      before_install: echo "extension = redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
      before_script:
        - composer install --no-interaction
      script:
        - composer code-style
      after_success: []

    - stage: "Test"
      name: "Jest Tests"
      language: node_js
      node_js:
        - 8
      before_script:
        - npm install coveralls
      script:
        - npm test -- --color --verbose
      after_success:
        - npm run coveralls

    - stage: "Build"
      if: (!fork) AND (type != pull_request)
      services:
        - docker
      before_script:
        - docker info
        - rm .dockerignore # this file is only for development
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin $DOCKER_REGISTRY
        - docker run --rm -v $(pwd):/community -w /community iras/node:12 npm install
      name: "php"
      script:
        - rm -Rf vendor
        - docker run --rm -v $(pwd):/community -w /community iras/php7-composer:3 composer install --no-dev --no-ansi --optimize-autoloader
        - docker run --rm -v $(pwd):/community -w /community -e NODE_ENV=production iras/node:12 npm run build
        - if [ ! -z "$TRAVIS_TAG" ]; then
            docker build --tag $DOCKER_REGISTRY/riki-community-php:$TRAVIS_TAG --file docker/php/Dockerfile . &&
            docker tag $DOCKER_REGISTRY/riki-community-php:$TRAVIS_TAG $DOCKER_REGISTRY/riki-community-php:latest &&
            docker push $DOCKER_REGISTRY/riki-community-php:$TRAVIS_TAG &&
            docker push $DOCKER_REGISTRY/riki-community-php:latest;
          else
            docker build --tag $DOCKER_REGISTRY/riki-community-php:dev-$TRAVIS_BRANCH --file docker/php/Dockerfile . &&
            docker push $DOCKER_REGISTRY/riki-community-php:dev-$TRAVIS_BRANCH;
          fi;

    - stage: "Build"
      if: (!fork) AND (type != pull_request)
      services:
        - docker
      before_script:
        - docker info
        - rm .dockerignore # this file is only for development
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin $DOCKER_REGISTRY
        - docker run --rm -v $(pwd):/community -w /community iras/node:12 npm install
      name: "nginx"
      script:
        - docker run --rm -v $(pwd):/community -w /community -e NODE_ENV=production iras/node:12 npm run build
        - if [ ! -z "$TRAVIS_TAG" ]; then
            docker build --tag $DOCKER_REGISTRY/riki-community-nginx:$TRAVIS_TAG --file docker/nginx/Dockerfile . &&
            docker tag $DOCKER_REGISTRY/riki-community-nginx:$TRAVIS_TAG $DOCKER_REGISTRY/riki-community-nginx:latest &&
            docker push $DOCKER_REGISTRY/riki-community-nginx:$TRAVIS_TAG &&
            docker push $DOCKER_REGISTRY/riki-community-nginx:latest;
          else
            docker build --tag $DOCKER_REGISTRY/riki-community-nginx:dev-$TRAVIS_BRANCH --file docker/nginx/Dockerfile . &&
            docker push $DOCKER_REGISTRY/riki-community-nginx:dev-$TRAVIS_BRANCH;
          fi;
